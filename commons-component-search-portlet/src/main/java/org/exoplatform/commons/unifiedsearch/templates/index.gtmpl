    <style>
      .Selected {
        font-weight: bold;
      }

      .Clickable {
        cursor: pointer;
      }

      .SearchResultType {
        margin-bottom: 40px;
        display: none;
      }


      .SearchResult {
        margin-left: 5px;
        padding-top: 5px;
        height: 60px;
      }

      .SearchResult .Avatar {
        float: left;
        padding-top: 3px;
      }

      .SearchResult .Avatar img {
        width: 48px;
        height: 48px;
      }

      .SearchResult .Content {
        padding-left: 10px;
        overflow: hidden;
      }

      .SearchResult .Content .Title {
        font-weight: bold;
      }

      .SearchResult .Content .Excerpt {
        font-size: x-small; height: 19px;
      }

      .SearchResult .Content .Detail {
        font-size: small; color: grey;
      }


      #filterForm {
        float: left;
        border-style: solid;
        border-width: 1px;
        margin-right: 10px;
        padding-bottom: 10px;
        height: auto;
        width: auto;
      }

      #filterFormTitle {
        text-align: center;
        background: none repeat scroll 0% 0% lightGrey;
        border-bottom: 1px solid;
        margin-bottom: 10px;
        padding-top: 2px;
        padding-bottom: 2px;
      }

      #filterForm ul {
        list-style: none outside none;
        padding-left: 20px;
        margin-top: 2px;
        margin-bottom: 16px;
      }


      #resultPage {
        overflow: auto;
      }


      #sortType {
        background-repeat: no-repeat;
        padding-right: 15px;
      }

      #sortType.Asc {
        background: url("/eXoResources/skin/DefaultSkin/skinIcons/16x16/icons/NavigationIcons/BlueUpArrow.gif");
      }

      #sortType.Desc {
        background: url("/eXoResources/skin/DefaultSkin/skinIcons/16x16/icons/NavigationIcons/BlueDownArrow.gif");
      }
    </style>
    <div id="searchPortlet">
      <div id="sqlExec" style="margin-bottom: 20px; border: 1px dashed gray; padding-top: 5px; padding-left: 5px; display: none;">
        <div style="font-size: small;">SQL:</div>
        <div style="margin: 10px;">
          <textarea rows="4" cols="50" id="txtSql">SELECT rep:excerpt(), jcr:primaryType FROM nt:base WHERE CONTAINS(*, '%query%') ORDER BY jcr:score() DESC</textarea>
        </div>
      </div>

      <div id="searchForm" style="padding-top: 5px;">
        <label id="lbSearch" class="Clickable" style="padding-left: 5px;">Search</label>
        <input type="text" id="txtQuery"/>
        <input type="button" id="btnSearch" value="Go"/>
      </div>

      <hr/>

      <div id="filterForm">
        <div id="filterFormTitle">Filter By</div>
        <div style="padding-right: 10px;">
          <input type="checkbox" name="site" value="all">All Sites
          <ul id="lstSites">
            <li><input type="checkbox" value="acme" name="site">ACME</li>
            <li><input type="checkbox" value="intranet" name="site">Intranet</li>
          </ul>

          <input type="checkbox" name="contentType" value="all">All Content Types
          <ul id="lstContentTypes"></ul>
        </div>
      </div>

      <div id="resultPage">
        <div id="resultTypes" style="display: none; margin-bottom: 15px;"></div>
        <div style="margin-bottom: 10px;">
          <span id="resultHeader"></span>
          <span style="float: right;">
            Sort By: <select id="lstSortBy"><option value='jcr:score()'>Relevancy</option></select><span id="sortType" class="Desc Clickable"></span>
          </span>
        </div>
        <div id="result" style="display: none;"></div>
        <div id="showMore" style="display: none; text-align: center; margin-bottom: 20px;"><input type="button" id="btnShowMore" value="Show More Results"/></div>
      </div>

    </div>

    <script>
      var LIMIT = 10;
      var REGISTRY;

      // Load content types
      $.getJSON("/rest/search/registry", function(registry){
        REGISTRY = registry;
        var contentTypes = [];
        $.each(REGISTRY, function(key, searchType){
          contentTypes.push("<li><input type='checkbox' name='contentType' value='" + searchType.name + "'>" + searchType.displayName + "</li>");
        });
        $("#lstContentTypes").html(contentTypes.join(""));

        $(":checkbox[name='contentType']").attr('checked', true);
        $("#txtQuery").focus();
      });


      function renderSearchResult(result) {
        var template = " \
          <div class='SearchResult %{type}'> \
            <div class='Avatar Clickable'> \
              <img title='%{title}' src='%{avatar}' alt='[+]'> \
            </div> \
            <div class='Content'> \
              <div class='Title'><a href='%{url}'>%{title}</a></div> \
              <div class='Excerpt'>%{excerpt}</div> \
              <div class='Detail'>%{detail}</div> \
            </div> \
          </div> \
        ";

        var html = template.replace(/%{type}/g, result.type).replace(/%{url}/g, result.url);
        html = html.replace(/%{title}/g, result.title).replace(/%{excerpt}/g, result.excerpt).replace(/%{detail}/g, result.detail).replace(/%{avatar}/g, result.avatar);
        console.log(html);
        return html;
      }

      function getSelectedTypes(){
        if($(":checkbox[name='contentType'][value='all']").is(":checked")) return "all";
        var selectedTypes = [];
        $.each($(":checkbox[name='contentType']:checked"), function(){
          selectedTypes.push(this.value);
        });
        return selectedTypes.join(";");
      }

      function getTypeByDisplayName(typeDisplayName) {
        return $("#lstContentTypes li:contains('" + typeDisplayName + "') input:checkbox").attr("value");
      }

      function getViewingType() {
        return $(".ResultType.Selected");
      }

      function showMore(offsetIncrement) {
        var query = $("#txtQuery").val();
        if(""==query) return;

        var $viewingType = getViewingType();
        var type = getTypeByDisplayName($viewingType.text());
        var offset = parseInt($viewingType.attr("offset"))+offsetIncrement;
        var sortBy = $("#lstSortBy").val();
        var sortType = $("#sortType").hasClass("Asc") ? "asc" : "desc";

        query = query + " type=" + type;
        query = query + " offset=" + offset;
        query = query + " limit=" + LIMIT;
        query = query + " sortBy=" + sortBy;
        query = query + " sortType=" + sortType;

        var restUrl = "/rest/search?q="+query;

        $("body").css("cursor", "wait");

        $.getJSON(restUrl, function(entries){
          var result = "";

          $.each(entries, function(i, entry){
            result = result + renderSearchResult(entry);
          });

          var resultHeader = (0==entries.length) ? "No more result" : "Results " + (offset+1) + " to " + (offset+entries.length);
          resultHeader = resultHeader + " for <strong>" + $("#txtQuery").val() + "<strong>";
          $("#resultHeader").html(resultHeader);
          if(entries.length==LIMIT) $("#showMore").show(); else $("#showMore").hide();

          $("#"+type+"-type").html(result);
          $("#"+type+"-type").show();
          $("body").css("cursor", "auto");

          $viewingType.attr("offset", offset);
          $viewingType.attr("numEntries", entries.length);
        });
      }


      $("#btnSearch").click(function(){
        var query = $("#txtQuery").val();
        if(""==query) return;

        if(query.indexOf(" type=")==-1) query = query + " type=" + getSelectedTypes();
        query = query + " offset=" + 0;
        query = query + " limit=" + LIMIT;

        var restUrl = $("#sqlExec").is(":visible") ? "/rest/search/jcr/search?q="+$("#txtSql").val() : "/rest/search?q="+query;
        restUrl = restUrl + "&categorized=true"

        $("body").css("cursor", "wait");

        $.getJSON(restUrl, function(entryMap){
          var resultTypes = "| ";
          var result = "";

          $.each(entryMap, function(type, entries){
            resultTypes = resultTypes + "<span class='Clickable ResultType' offset=0 numEntries=" + $(entries).size() + ">" + type + "</span>" + " | ";
            result = result + "<div class='SearchResultType' id='" + getTypeByDisplayName(type) + "-type'>";

            $.each(entries, function(i, entry){
              result = result + renderSearchResult(entry);
            });
            result = result + "</div>"; //type div
          });

          if(""==result) {
            $("#resultTypes").html("");
            $("#result").html("");
            $("#resultHeader").html("No result for <strong>" + $("#txtQuery").val() + "<strong>");
            $("#showMore").hide();
            $("body").css("cursor", "auto");
            return;
          }

          $("#resultTypes").html(resultTypes+"<hr/>");
          $("#resultTypes").show();

          $("#result").html(result);
          $("#result").show();
          $("body").css("cursor", "auto");

          $(".ResultType").first().click();
        });

      });


      $(".ResultType").live("click", function(){
        $(".Selected").toggleClass("Selected");
        $(this).toggleClass("Selected");

        var offset = parseInt($(this).attr("offset"));
        var numEntries = parseInt($(this).attr("numEntries"));

        var resultHeader = (0==numEntries) ? "No more result" : "Results " + (offset+1) + " to " + (offset+numEntries);
        resultHeader = resultHeader + " for <strong>" + $("#txtQuery").val() + "<strong>";
        $("#resultHeader").html(resultHeader);
        if(numEntries==LIMIT) $("#showMore").show(); else $("#showMore").hide();

        //type = type.replace(/(:|\\.)/g,'\\\\$1').replace(/\\s/g, "_"); //for jcr nodetype
        var type=getTypeByDisplayName($(this).text());
        var sortableFields = REGISTRY[type].properties.sortableFields;
        var sortBy = ["<option value='jcr:score()'>Relevancy</option>"];
        if(sortableFields != undefined) {
          $.each(sortableFields, function(i, field){
            sortBy.push("<option value='" + field.name + "'>" + field.displayName + "</option>")
          });
        }
        $("#lstSortBy").html(sortBy.join(""));
        $(".SearchResultType").hide(); //hide all other types
        $("#"+type+"-type").show();
      });


      $(".SearchResult .Avatar img").live("click", function(){
        var url = $(this).parents("div.SearchResult").find(".Content > .Title > a").attr("href");

        //get jcr node properties
        if(0 == url.indexOf("/rest/jcr/")) {
          $.getJSON("/rest/search/jcr/props?node=" + url.replace("/rest/jcr/", ""), function(props){
            var sProps = "";
            $.each(props, function(key, value){
              sProps = sProps + key + " = " + value + "\\n";
            });
            console.log(props);
            alert(sProps);
          });
        }
      });


      $(":checkbox[name='contentType']").live("click", function(){
        if("all"==this.value){
          if($(this).is(":checked")) {
            $(":checkbox[name='contentType']").attr('checked', true);
          } else {
            $(":checkbox[name='contentType']").attr('checked', false);
          }
        } else {
          $(":checkbox[name='contentType'][value='all']").attr('checked', false);
        }
      });


      $("#txtQuery").keyup(function(event){
        if(event.keyCode == 13){
          $("#btnSearch").click();
        }
      });


      $("#lbSearch").click(function(){
        $("#sqlExec").toggle();
      });


      $("#btnShowMore").click(function(){
        showMore(LIMIT);
      });


      $("#lstSortBy").change(function(){
        showMore(0);
      });


      $("#sortType").live("click", function(){
        $(this).toggleClass("Asc Desc");
        showMore(0);
      });
    </script>