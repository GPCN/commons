    <style>
      .SearchBox {
          background: url("/eXoResources/skin/DefaultSkin/skinIcons/16x16/icons/SearchIcon.png") no-repeat scroll 4px center white;
          border: solid 1px lightgray;
          border-radius: 12px;
          height: 18px;
          padding-left: 20px;
          width: 120px;
      }


      .Selected {
        font-weight: bold;
      }

      .Clickable {
        cursor: pointer;
      }

      .Ellipsis {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        -o-text-overflow: ellipsis;
        -ms-text-overflow: ellipsis;
      }


      .SearchResultType {
        margin-bottom: 40px;
        display: none;
      }

      .SearchResult {
        margin-left: 5px;
        padding-top: 5px;
        height: 60px;
      }

      .SearchResult .Avatar {
        float: left;
        padding-top: 0px;
      }

      .SearchResult .Avatar img {
        padding-top: 3px;
        width: 48px;
        height: 48px;
      }

      .SearchResult .Content {
        padding-left: 10px;
        overflow: hidden;
      }

      .SearchResult .Content .Title {
/*        font-weight: bold;*/
/*        color: lightgray !important;*/
/*        color: #555555 !important;*/
      }

      .SearchResult .Content .Excerpt div {
        font-size: x-small; height: 19px;
      }

      .SearchResult .Content .Detail {
        font-size: small; color: grey;
      }


      .QuickSearchResult {
        margin-left: 0px;
        padding-top: 0px;
        height: 30px;
      }

      .QuickSearchResult .Avatar img {
        width: 20px;
        height: 24px;
      }

      .QuickSearchResult .Content {
        padding-left: 5px;
      }

      .QuickSearchResult .Content .Excerpt div {
        font-size: xx-small; color: grey;
      }


      #facetsFilter {
        float: left;
        border: solid 1px lightgray;
        margin-top: 10px;
        margin-left: 10px;
        margin-right: 5px;
        padding-bottom: 10px;
        height: auto;
        width: auto;
      }

      #facetsFilterTitle {
        text-align: center;
        background: none repeat scroll 0% 0% lightGrey;
        /*border-bottom: 1px solid;*/
        margin-bottom: 10px;
        padding-top: 4px;
        padding-bottom: 6px;
      }

      #facetsFilter ul {
        list-style: none outside none;
        padding-left: 20px;
        margin-top: 2px;
        margin-bottom: 16px;
      }


      #resultPage {
        overflow: auto;
      }


      #sortType {
        padding-right: 15px;
      }

      #sortType.Asc {
        background: url("/eXoResources/skin/DefaultSkin/skinIcons/16x16/icons/NavigationIcons/BlueUpArrow.gif") no-repeat;
      }

      #sortType.Desc {
        background: url("/eXoResources/skin/DefaultSkin/skinIcons/16x16/icons/NavigationIcons/BlueDownArrow.gif") no-repeat;
      }


      #quickSearchResult {
        position: absolute;
        background: white;
        width: 315px;
        margin-top: 6px;
        margin-left: 3px;
        display:none;
      }

      #quickSearchResult table, #quickSearchResult th, #quickSearchResult td {
        border: 1px solid lightgray;
      }


      #searchPortlet input:focus, #searchPortlet textarea:focus {
          outline: none;
      }
    </style>


    <div id="searchPortlet">

      <div id="quickSearch">
        <div style="padding-top: 5px;" id="quickSearchForm">
          <input type="text" id="txtQuickSearchQuery" class="SearchBox">
        </div>
        <div id="quickSearchResult" style="z-index: 1001;">
        </div>
      </div>

      <div id="searchPage" style="display: none; z-index: 1000;">
        <div id="sqlExec" style="margin-bottom: 20px; border: 1px dashed gray; padding-top: 5px; padding-left: 5px; display: none;">
          <div style="font-size: small;">SQL:</div>
          <div style="margin: 10px;">
            <textarea rows="4" cols="50" id="txtSql">SELECT rep:excerpt(), jcr:primaryType FROM nt:base WHERE CONTAINS(*, '%query%') ORDER BY jcr:score() DESC</textarea>
          </div>
        </div>

        <div id="searchForm" style="padding-top: 10px; text-align: center;">
          <input type="text" id="txtQuery" class="SearchBox" style="width: 250px;">
          <input type="button" id="btnSearch" value="Search">
          <hr style="color: lightgray; margin: 10px 0px 0px;">
        </div>

        <div id="facetsFilter">
          <div id="facetsFilterTitle">Filter By</div>
          <div style="padding-right: 5px;">
            <div id="siteFilter">
              <input type="checkbox" name="site" value="all">All Sites
              <ul id="lstSites"></ul>
            </div>

            <input type="checkbox" name="contentType" value="all">All Content Types
            <ul id="lstContentTypes"></ul>
          </div>
        </div>

        <div id="resultPage" style="margin-left: 10px; margin-right: 20px; margin-top: 10px;">
          <div id="resultTypes" style="display: none; margin-bottom: 15px; padding-top: 4px;"></div>
          <div style="margin-bottom: 10px;">
            <span id="resultHeader"></span>
            <span id="resultSort" style="float: right; display: none;">
              Sort By: <select id="lstSortBy"></select><span id="sortType" class="Desc Clickable">&nbsp;</span>
            </span>
          </div>
          <div id="result" style="display: none;"></div>
          <div id="showMore" style="display: none; text-align: center; margin-bottom: 20px;"><input type="button" id="btnShowMore" value="Show More Results"/></div>
        </div>

      </div>

    </div>

    <script>
      //*** Global variables ***

      var CONNECTORS;
      var SEARCH_TYPES;
      var SEARCH_SETTING;
      var QUICKSEARCH_SETTING;
      var LIMIT;
      var QUICKSEARCH_LIMIT;
      var VIEWING_TYPE;

      var SEARCH_RESULT_TEMPLATE = " \
        <div class='SearchResult '> \
          <div class='Avatar Clickable'> \
            <img title='%{title}' src='%{avatar}' alt='[+]'> \
          </div> \
          <div class='Content'> \
            <div class='Title Ellipsis'><a href='%{url}'>%{title}</a></div> \
            <div class='Excerpt Ellipsis'>%{excerpt}</div> \
            <div class='Detail'>%{detail}</div> \
          </div> \
        </div> \
      ";

      var QUICKSEARCH_RESULT_TEMPLATE= " \
        <div class='SearchResult QuickSearchResult'> \
          <div class='Avatar Clickable'> \
            <img title='%{title}' src='%{avatar}' alt='[+]'> \
          </div> \
          <div class='Content'> \
            <div class='Title Ellipsis'><a href='%{url}'>%{title}</a></div> \
            <div class='Excerpt Ellipsis'>%{excerpt}</div> \
          </div> \
        </div> \
      ";

      var QUIKSEARCH_TABLE_TEMPLATE=" \
            <table style='table-layout: fixed;'> \
              <col width='30%'> \
              <col width='70%'> \
              %{resultRows} \
              <tr> \
                <th colspan='2' style='padding: 10px; font-weight: normal;'> \
                  <span id='seeAll' class='Clickable'>%{message}</span> \
                </th> \
              </tr> \
            </table> \
          ";

      var QUICKSEARCH_TABLE_ROW_TEMPLATE=" \
            <tr> \
              <th> \
                <div style='margin-top: 8px; color: gray;'>%{type}</div> \
              </th> \
              <td style='padding: 2px;'> \
                <div style='margin-left: 3px;'>%{results}</div> \
              </td> \
            </tr> \
          ";


      //*** The entry point ***
      (function(){
        getRegistry(function(registry){
          CONNECTORS = registry[0];
          SEARCH_TYPES = registry[1];
          getSearchSetting(function(setting){
            SEARCH_SETTING = setting;
            LIMIT = setting.resultsPerPage;

            loadContentFilter(CONNECTORS, setting);
            loadSiteFilter(setting);

            if(setting.hideFacetsFilter) {
              $("#facetsFilter").hide();
            }

            if(setting.hideSearchForm) {
              $("#searchForm").hide();
            } else {
              $("#txtQuery").focus();
            }
          });

          getQuicksearchSetting(function(setting){
            QUICKSEARCH_SETTING = setting;
            QUICKSEARCH_LIMIT = setting.resultsPerPage;
          });

        });
      })();


      //*** Utility functions ***

      String.prototype.toProperCase = function() {
        return this.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
      };


      String.prototype.highlight = function(words) {
        var str = this;
        for(var i=0; i<words.length; i++) {
          if(""==words[i]) continue;
          var regex = new RegExp("(" + words[i] + ")", "gi");
          str = str.replace(regex, "<strong>$1</strong>");
        }
        return str;
      };


      function getRegistry(callback) {
        $.getJSON("/rest/search/registry", function(registry){
          if(callback) callback(registry);
        });
      }


      function getSearchSetting(callback) {
        $.getJSON("/rest/search/setting", function(setting){
          if(callback) callback(setting);
        });
      }


      function getQuicksearchSetting(callback) {
        $.getJSON("/rest/search/setting/quicksearch", function(setting){
          if(callback) callback(setting);
        });
      }


      function loadContentFilter(connectors, searchSetting) {
        var contentTypes = [];
        $.each(SEARCH_TYPES, function(i, searchType){
          var connector = connectors[searchType];
          // Show only the types user selected in setting
          if(connector && (-1 != $.inArray("all", searchSetting.searchTypes) || -1 != $.inArray(searchType, searchSetting.searchTypes))) {
            contentTypes.push("<li><label><input type='checkbox' name='contentType' value='" + connector.searchType + "'>" + connector.displayName + "</label></li>");
          }
        });
        if(0!=contentTypes.length) {
          $("#lstContentTypes").html(contentTypes.join(""));
          $(":checkbox[name='contentType']").attr('checked', true); //check all types by default
        } else {
          $(":checkbox[name='contentType'][value='all']").attr("checked", false).attr("disabled", "disabled");
        }
      }


      function loadSiteFilter(searchSetting) {
        if(searchSetting.searchCurrentSiteOnly) {
          $("#siteFilter").hide();
        } else {
          $.getJSON("/rest/search/sites", function(sites){
            var siteNames = [];
            $.each(sites, function(i, site){
              siteNames.push("<li><label><input type='checkbox' name='site' value='" + site + "'>" + site.toProperCase() + "</label></li>");
            });
            $("#lstSites").html(siteNames.join(""));
            $(":checkbox[name='site']").attr('checked', true);
          });
        }
      }


      function getSelectedTypes(){
        var selectedTypes = [];
        $.each($(":checkbox[name='contentType'][value!='all']:checked"), function(){
          selectedTypes.push(this.value);
        });
        return selectedTypes.join(",");
      }


      function getSelectedSites(){
        if(SEARCH_SETTING.searchCurrentSiteOnly) return parent.eXo.env.portal.portalName;
        var selectedSites = [];
        $.each($(":checkbox[name='site'][value!='all']:checked"), function(){
          selectedSites.push(this.value);
        });
        return selectedSites.join(",");
      }


      function quickSearch() {
        var query = $("#txtQuickSearchQuery").val();
        var sites = QUICKSEARCH_SETTING.searchCurrentSiteOnly ? parent.eXo.env.portal.portalName : "all";
        //var restUrl = "/rest/search?q=" + query+"&sites="+getSelectedSites()+"&types="+getSelectedTypes()+"&offset=0"+"&limit="+LIMIT+"&sort="+"&order=desc";
        var restUrl = "/rest/search?q=" + query+"&sites="+sites+"&types="+QUICKSEARCH_SETTING.searchTypes.join(",")+"&offset=0"+"&limit="+QUICKSEARCH_LIMIT+"&sort="+"&order=desc";

        $.getJSON(restUrl, function(resultMap){
          var rows = [];
          $.each(SEARCH_TYPES, function(i, searchType){
            results = resultMap[searchType];
            if(results && 0!=$(results).size()) {
              var cell = [];
              $.each(results, function(i, result){
                cell.push(renderSearchResult(result, true));
              });
              var row = QUICKSEARCH_TABLE_ROW_TEMPLATE.replace(/%{type}/g, CONNECTORS[searchType].displayName).replace(/%{results}/g, cell.join(""));
              rows.push(row);
            }
          });
          var message = rows.length==0 ? "No result for <strong>" + query + "<strong>" : "See All Search Results";
          $("#quickSearchResult").html(QUIKSEARCH_TABLE_TEMPLATE.replace(/%{resultRows}/, rows.join("")).replace(/%{message}/g, message));
          var width = Math.min($("#quickSearchResult").width(), $(window).width() - $("#txtQuickSearchQuery").offset().left - 20);
          $("#quickSearchResult").width(width);
          $("#quickSearchResult").show();
        });
      }


      function search(callback) {
        var query = $("#txtQuery").val();
        var sql = $("#txtSql").val().replace(/%query%/g, query);
        if(!isSqlMode() && ""==query) {
          clearResultPage();
          return;
        }

        var restUrl = "/rest/search?q=" + (isSqlMode()?sql:query+"&sites="+getSelectedSites()+"&types="+getSelectedTypes()+"&offset=0"+"&limit="+LIMIT+"&sort="+"&order=desc");

        $("body").css("cursor", "wait");

        $.getJSON(restUrl, function(resultMap){
          var resultTypes = "| ";
          var result = "";

          $.each(SEARCH_TYPES, function(i, searchType){
            results = resultMap[searchType];
            if(0!=$(results).size()) {
              var typeDisplayName = isSqlMode() ? searchType + " (" + $(results).size() + ")" : CONNECTORS[searchType].displayName;
              resultTypes = resultTypes + "<span class='Clickable ResultType' type='" + searchType + "' offset=0 numEntries=" + $(results).size() + ">" + typeDisplayName + "</span>" + " | ";
              result = result + "<div class='SearchResultType' id='" + searchType + "-type'>";

              $.each(results, function(i, entry){
                result = result + renderSearchResult(entry);
              });
              result = result + "</div>"; //type div
            }
          });

          if(""==result) {
            clearResultPage("No result for <strong>" + (isSqlMode()?sql:$("#txtQuery").val()) + "<strong>");
            return;
          }

          $("#resultTypes").html(resultTypes+"<hr style='color: lightgray'/>");
          $("#resultTypes").show();

          $("#result").html(result);
          $("#result").show();
          $("#resultSort").show();
          $("body").css("cursor", "auto");

          if(callback) callback();
          (VIEWING_TYPE && $(".ResultType[type='" + VIEWING_TYPE + "']").get(0) ? $(".ResultType[type='" + VIEWING_TYPE + "']").get(0) : $(".ResultType").first()).click();
        });
      }


      function renderSearchResult(result, isQuickSearch) {
        var template = isQuickSearch ?  QUICKSEARCH_RESULT_TEMPLATE : SEARCH_RESULT_TEMPLATE;
        var query = $("#searchPage").is(":visible") ? $("#txtQuery").val() : $("#txtQuickSearchQuery").val();
        var terms = query.split(/\\s+/g);

        var html = template.replace(/%{url}/g, result.url).replace(/%{title}/g, result.title.highlight(terms)).replace(/%{avatar}/g, result.imageUrl);
        //if(!isQuickSearch) html = html.replace(/%{excerpt}/g, result.excerpt).replace(/%{detail}/g, result.detail);
        html = html.replace(/%{excerpt}/g, result.excerpt.highlight(terms)).replace(/%{detail}/g, result.detail.highlight(terms));
        return html;
      }


      function clearResultPage(message){
        $("#resultTypes").html("");
        $("#result").html("");
        $("#resultHeader").html(message?message:"");
        $("#resultSort").hide();
        $("#showMore").hide();
        $("body").css("cursor", "auto");
        return;
      }


      function showMore(offsetIncrement) {
        if(isSqlMode()) return;
        var query = $("#txtQuery").val();
        if(""==query) {
          clearResultPage();
          return;
        }

        var $viewingType = $(".ResultType.Selected");
        var type = $viewingType.attr("type");
        var offset = offsetIncrement!=0 ? parseInt($viewingType.attr("offset"))+offsetIncrement : 0; //if sorting then start from begining
        var sortBy = $("#lstSortBy").val();
        var sortType = $("#sortType").hasClass("Asc") ? "asc" : "desc";

        var restUrl = "/rest/search?q="+query+"&sites="+getSelectedSites()+"&types="+type+"&offset="+offset+"&limit="+LIMIT+"&sort="+sortBy+"&order="+sortType;

        $("body").css("cursor", "wait");

        $.getJSON(restUrl, function(entryMap){
          var result = "";
          var entries = entryMap[type];

          $.each(entries, function(i, entry){
            result = result + renderSearchResult(entry);
          });

          var resultHeader = (0==entries.length) ? "No more result" : "Results 1 to " + (offset+entries.length);
          resultHeader = resultHeader + " for <strong>" + (isSqlMode()?$("#txtSql").val().replace(/%query%/g, $("#txtQuery").val()):$("#txtQuery").val()) + "<strong>";
          $("#resultHeader").html(resultHeader);
          if(entries.length==LIMIT) $("#showMore").show(); else $("#showMore").hide();

          $("#"+type+"-type").show();

          if(0==offsetIncrement) {
            $("#"+type+"-type").html(result);
          } else {
            $("#"+type+"-type").append(result);
            $("#searchPage").animate({ scrollTop: $("#resultPage")[0].scrollHeight}, "slow");
          }

          $("body").css("cursor", "auto");

          $viewingType.attr("offset", offset);
          $viewingType.attr("numEntries", entries.length);
        });
      }


      function isSqlMode() {
        return $("#sqlExec").is(":visible");
      }


      //*** Event handlers - Search page ***

      $(".ResultType").live("click", function(){
        $(".Selected").toggleClass("Selected");
        $(this).toggleClass("Selected");

        var offset = parseInt($(this).attr("offset"));
        var numEntries = parseInt($(this).attr("numEntries"));

        var resultHeader = (0==numEntries) ? "No more result" : "Results 1 to " + (offset+numEntries);
        resultHeader = resultHeader + " for <strong>" + (isSqlMode()?$("#txtSql").val().replace(/%query%/g, $("#txtQuery").val()):$("#txtQuery").val()) + "<strong>";
        $("#resultHeader").html(resultHeader);
        if(numEntries==LIMIT) $("#showMore").show(); else $("#showMore").hide();

        var type=$(this).attr("type");
        //type = type.replace(/(:|\\.)/g,'\\\\$1').replace(/\\s/g, "_"); //for jcr nodetype
        type = type.replace(/(:|\\.)/g,'\\\\$1'); //for jcr nodetype
        var sortFields = CONNECTORS[type] ? CONNECTORS[type].sortFields : undefined;
        var sortBy = [];
        if(sortFields != undefined) {
          $.each(sortFields, function(i, field){
            sortBy.push("<option value='" + field + "'>" + field + "</option>")
          });
        }
        $("#lstSortBy").html(sortBy.join(""));
        $(".SearchResultType").hide(); //hide all other types
        $("#"+type+"-type").show();

        var $viewingType = $(".ResultType.Selected");
        $("#lstSortBy").val($viewingType.attr("sortBy")||"Relevancy").attr("selected",true);
        $("#sortType").removeClass("Asc Desc").addClass($viewingType.attr("sortType")||"Desc");
      });


      $(".SearchResult .Avatar img").live("click", function(){
        var url = $(this).parents("div.SearchResult").find(".Content > .Title > a").attr("href");

        //get jcr node properties
        if(0 == url.indexOf("/rest/jcr/")) {
          $.getJSON("/rest/search/jcr/props?node=" + url.replace("/rest/jcr/", ""), function(props){
            var sProps = "";
            $.each(props, function(key, value){
              sProps = sProps + key + " = " + value + "\\n";
            });
            console.log(props);
            alert(sProps);
          });
        }
      });


      $(":checkbox[name='contentType']").live("click", function(){
        if("all"==this.value){ //All Content Types checked
          if($(this).is(":checked")) { // check/uncheck all
            $(":checkbox[name='contentType']").attr('checked', true);
          } else {
            $(":checkbox[name='contentType']").attr('checked', false);
          }
        } else {
          $(":checkbox[name='contentType'][value='all']").attr('checked', false); //uncheck All Content Types
        }

        if(!isSqlMode()) {
          VIEWING_TYPE = $(".ResultType.Selected").attr("type"); //save the current view before performing search
          var checkedType = $(this).is(":checked") ? this.value : undefined;
          search(function(){
            if(checkedType && $(".ResultType[type='" + checkedType + "']").get(0)) VIEWING_TYPE = checkedType;
          });
        }
      });


      $(":checkbox[name='site']").live("click", function(){
        if("all"==this.value){ //All Sites checked
          if($(this).is(":checked")) { // check/uncheck all
            $(":checkbox[name='site']").attr('checked', true);
          } else {
            $(":checkbox[name='site']").attr('checked', false);
          }
        } else {
          $(":checkbox[name='site'][value='all']").attr('checked', false); //uncheck All Sites
        }

        if(!isSqlMode()) {
          VIEWING_TYPE = $(".ResultType.Selected").attr("type"); //save the current view before performing search
          search();
        }
      });


      $("#btnSearch").click(function(){
        search();
      });


      $("#txtQuery").focus(function(){
        VIEWING_TYPE = $(".ResultType.Selected").attr("type"); //save the current view before performing search
      });


      $("#txtQuery").keyup(function(e){
        var keyCode = e.keyCode || e.which,
            arrow = {up: 38, down: 40 };

        switch (keyCode) {
          case arrow.up:
            $("#sqlExec").hide();
            break;
          case arrow.down:
            $("#sqlExec").show();
            break;
          case 13:
            search();
        }
      });


      $("#btnShowMore").click(function(){
        showMore(LIMIT);
      });


      $("#lstSortBy").change(function(){
        $(".ResultType.Selected").attr("sortBy", $(this).val());
        showMore(0);
      });


      $("#sortType").live("click", function(){
        $(this).toggleClass("Asc Desc");
        $(".ResultType.Selected").attr("sortType", $(this).hasClass("Asc") ? "Asc" : "Desc");
        showMore(0);
      });


      //*** Event handlers - Quick search ***

      $("#seeAll").live("click", function(){
        $("#quickSearchResult").hide();
        $("#txtQuery").val($("#txtQuickSearchQuery").val());

        // Check only types selected in quicksearch settting
        $.each($(":checkbox[name='contentType']"), function(){
          $(this).attr('checked', -1!=QUICKSEARCH_SETTING.searchTypes.indexOf(this.value) || -1!=QUICKSEARCH_SETTING.searchTypes.indexOf("all"));
        });

        var $container = $("#UIPageBody");
        $("#searchPage").css({position: "absolute",
                              overflow: "auto",
                              background: "white",
                              top: $container.offset().top+"px",
                              left: $container.offset().left+"px",
                              width: $container.width(),
                              height: $container.height()
                            });
        $("#searchPage").show();
        $("#txtQuery").focus();
        search();
      });


      $("#txtQuickSearchQuery").keyup(function(e){
        if(""==$(this).val()) {
          $("#quickSearchResult").hide();
          return;
        }

        if(13==e.keyCode) {
          $("#seeAll").click();
        } else {
          quickSearch();
        }
      });


      $("#txtQuickSearchQuery").focus(function(){
        $("#searchPage").hide();
        if(""!=$("#txtQuickSearchQuery").val()) {
          quickSearch();
        }
      });


      $("#txtQuickSearchQuery").blur(function(){
        setTimeout(function(){$("#quickSearchResult").hide();}, 200);
      });


      //*** Event handlers - Whole portlet ***

      $("#searchPortlet").keyup(function(e){
        if(27==e.keyCode) {
          $("#searchPage").hide();
          $("#quickSearchResult").hide();
        }
      });


      $("body").click(function(e) {
        if($(e.target).is('#searchPortlet, #searchPortlet *')) return;
        $("#searchPage").hide();
        $("#quickSearchResult").hide();
      });


    </script>